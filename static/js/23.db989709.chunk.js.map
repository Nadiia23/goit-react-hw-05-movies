{"version":3,"file":"static/js/23.db989709.chunk.js","mappings":"qSAEMA,E,MAASC,GAAAA,OAAa,CACxBC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAW,mCAAG,sGACAL,EAAOM,IAAI,uBADX,uBACfC,EADe,EACfA,KADe,kBAGhBA,EAAKC,SAHW,2CAAH,qDAMXC,EAAW,mCAAG,WAAMC,GAAN,uFACAV,EAAOM,IAAP,iBAAqBI,IADrB,cACjBC,EADiB,yBAGhBA,EAASJ,MAHO,2CAAH,sDAMXK,EAAgB,mCAAG,WAAMT,GAAN,yFACPH,EAAOM,IAAI,gBAAiB,CAAEH,OAAQA,IAD/B,uBACtBI,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAYhBM,EAAa,mCAAG,WAAMH,GAAN,yFACJV,EAAOM,IAAP,iBAAqBI,EAArB,aADI,uBACnBH,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbO,EAAgB,mCAAG,WAAMJ,GAAN,yFACLV,EAAOM,IAAP,iBAAqBI,EAArB,aADK,uBACpBH,EADoB,EACpBA,KACRQ,QAAQC,IAAIT,GAFgB,kBAGvBA,GAHuB,2CAAH,qD,qICrC7B,EAA6B,2BAA7B,EAA2E,iCAA3E,EAA8H,gCAA9H,EAAqR,2BAArR,EAAiU,+BAAjU,EAAiX,+B,SC6DjX,MAxDA,WACE,OAAwCU,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACAX,QAAQC,IAAIE,IAEZS,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CACA,IAAMK,EAAO,mCAAG,qGACKhB,EAAAA,EAAAA,IAAiB,CAACW,MAAAA,IADvB,OACRhB,EADQ,OAEde,EAASf,EAAKC,SAFA,2CAAH,qDAIboB,GALkB,CAMnB,GAAE,CAACL,IAEJ,IAUMM,EAAc,SAAAtB,GAClBiB,EAASjB,EACV,EAEC,OACA,iCACE,kBAAMuB,SAZW,SAAAC,GACnBA,EAAEC,iBACFH,EAAYJ,GACZN,EAAgB,CAACI,MAAME,GACxB,EAQiCQ,UAAWC,EAAzC,WACI,kBAAOC,SAjBM,SAAAJ,GACnBL,EAAeK,EAAEK,OAAOC,MACzB,EAgBSJ,UAAWC,EACXI,KAAK,OACDC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACpB,mBAAQH,KAAK,SAASL,UAAWC,EAAjC,uBAEDb,IACC,eAAIY,UAAWC,EAAf,gBACGb,QADH,IACGA,OADH,EACGA,EAAOqB,KAAI,SAAAC,GAAI,OACd,eAAkBV,UAAWC,EAA7B,UACE,SAAC,KAAD,CAAMU,GAAE,UAAKD,EAAKjC,IAAMA,GAAIiC,EAAKjC,GAAIuB,UAAWC,EAAhD,SACGS,EAAKE,kBAFDF,EAAKjC,GADA,QAWzB,C","sources":["helpers/api.js","webpack://react-homework-template/./src/pages/Movies/movies.module.css?e50d","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst getApi = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'c7319c856c6453f29ecfc93fd160b989'\n    },\n});\n\nexport const getTrending = async () => {\n    const { data } = await getApi.get('/trending/movie/day');\n    // console.log(data.results);\n    return data.results;\n};\n\nexport const getMoviesId = async id => { \n    const response = await getApi.get(`/movie/${id}`);\n    // console.log(response.data);\n    return response.data;\n}\n\nexport const getMoviesByQuery = async params => {\n  const { data } = await getApi.get('/search/movie', { params: params });\n  return data;\n};\n\n// export const getMoviesCast= async id => { \n//     const response = await getApi.get(`/movie/${id}/credits`);\n//     console.log(response.data);\n//     return response.data;\n// }\n\n\nexport const getMoviesCast = async id => {\n  const { data } = await getApi.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMoviesReviews = async id => {\n    const { data } = await getApi.get(`/movie/${id}/reviews`);\n    console.log(data);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"movies_searchForm__3VQcq\",\"searchFormButton\":\"movies_searchFormButton__NH5t3\",\"searchFormInput\":\"movies_searchFormInput__RaHoG\",\"searchForm-input\":\"movies_searchForm-input__w7Vyx\",\"searchForm-button\":\"movies_searchForm-button__RCi5H\",\"searchList\":\"movies_searchList__bmYJ5\",\"searchListItem\":\"movies_searchListItem__3ciCF\",\"searchListLink\":\"movies_searchListLink__MgBqS\"};","import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { getMoviesByQuery  } from 'helpers/api';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport s from './movies.module.css';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movie, setMovie] = useState(null);\n  const [query, setQuery] = useState(null);\n  const [searchValue, setSearchValue] = useState('');\n  console.log(searchParams);\n\n  useEffect(() => {\n    if (!query) return;\n    const getData = async () => {\n      const data = await getMoviesByQuery({query});\n      setMovie(data.results);\n    };\n    getData();\n  }, [query]);\n\n  const handleChange = e => {\n    setSearchValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getFormData(searchValue);\n    setSearchParams({query:searchValue})\n  };\n\n  const getFormData = data => {\n    setQuery(data);\n  };\n    \n    return (\n    <>\n      <form onSubmit={handleSubmit} className={s.searchForm }>\n          <input onChange={handleChange}\n            className={s.searchFormInput}\n            type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"/>\n        <button type=\"submit\" className={s.searchFormButton}>Search</button>\n      </form>\n      {movie && (\n        <ul className={s.searchList}>\n          {movie?.map(item => (\n            <li key={item.id} className={s.searchListItem}>\n              <Link to={`${item.id}`} id={item.id} className={s.searchListLink}>\n                {item.original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Movies;"],"names":["getApi","axios","baseURL","params","api_key","getTrending","get","data","results","getMoviesId","id","response","getMoviesByQuery","getMoviesCast","getMoviesReviews","console","log","useSearchParams","searchParams","setSearchParams","useState","movie","setMovie","query","setQuery","searchValue","setSearchValue","useEffect","getData","getFormData","onSubmit","e","preventDefault","className","s","onChange","target","value","type","autoComplete","autoFocus","placeholder","map","item","to","original_title"],"sourceRoot":""}